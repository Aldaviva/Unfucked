<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFrameworks>netstandard2.0;net6.0;net8.0</TargetFrameworks>
        <Version>0.0.1-beta.9</Version>
        <RootNamespace>Unfucked</RootNamespace>
        <Description>Fix egregiously broken or missing functionality in Microsoft.Extensions.Hosting dependency injection.</Description>
        <PackageTags>di ioc hosting dependency dependencies injection inversion control $(PackageTags)</PackageTags>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="JetBrains.Annotations" />
        <PackageReference Include="Microsoft.Extensions.Hosting" PrivateAssets="all" />
        <PackageReference Include="ReSharper.ExportAnnotations.Task" PrivateAssets="all" IncludeAssets="runtime; build; native; contentfiles; analyzers; buildtransitive" />
    </ItemGroup>

    <Choose>
        <When Condition="'$(Configuration)' == 'Release'">
            <ItemGroup>
                <PackageReference Include="Unfucked" />
            </ItemGroup>
        </When>
        <Otherwise>
            <ItemGroup>
                <ProjectReference Include="..\Unfucked\Unfucked.csproj" />
            </ItemGroup>
        </Otherwise>
    </Choose>
    
    <!--
    Tenacom/ReSharper.ExportAnnotations is a third-party MSBuild task that makes ReSharper annotations in this library (like StructuredMessageTemplate) available to dependents. By packing an
    autogenerated external annotation XML file into this library's package, consumers are able to see correct syntax highlighting on ILogger.Info and other methods.
    
    Unfortunately, this plugin dependency has not been updated in three years, and the developer neglected to add a RollForward behavior to the ExportAnnotations program, so it still requires the now
    out-of-support .NET Runtime 6 to run, when the oldest supported runtime I can install in 2025-10 is .NET 8. This causes builds to break with the following error:
    
        C:\Users\Ben\.nuget\packages\resharper.exportannotations.task\1.4.0\build\ReSharper.ExportAnnotations.Task.Building.targets(85,5): error MSB3073: The command "dotnet C:\Users\Ben\.nuget\packages\resharper.exportannotations.task\1.4.0\tools\net6.0/ExportAnnotations.dll "C:\Users\Ben\Documents\Projects\Unfucked\di\obj\Debug\net6.0\Unfucked.DI.dll" -liblist "obj\Debug\net6.0\ExportAnnotations.libraries"" exited with code -2147450730.
    
    You can see more details with `dotnet build -v:diag`: "You must install or update .NET to run this application.", "Framework: 'Microsoft.NETCore.App', version '6.0.0' (x64)"
    
    To fix this issue, this library's build edits the runtime configuration JSON file of this plugin before it is run. It sets the roll-forward behavior to LatestMajor, like the original author should 
    have done, allowing it to run successfully on .NET 8 and 9.
    -->
    <Target Name="FixExternalAnnotationsRollForward" BeforeTargets="BeforeBuild" Condition="!$([System.IO.File]::ReadAllText('$(USERPROFILE)\.nuget\packages\resharper.exportannotations.task\1.4.0\tools\net6.0\ExportAnnotations.runtimeconfig.json').ToLowerInvariant().Contains('rollforward'))">
        <WriteLinesToFile File="$(USERPROFILE)\.nuget\packages\resharper.exportannotations.task\1.4.0\tools\net6.0\ExportAnnotations.runtimeconfig.json" Lines="{&quot;runtimeOptions&quot;: {&quot;rollForward&quot;: &quot;LatestMajor&quot;, &quot;tfm&quot;: &quot;net6.0&quot;, &quot;framework&quot;: {&quot;name&quot;: &quot;Microsoft.NETCore.App&quot;, &quot;version&quot;: &quot;6.0.0&quot;}, &quot;configProperties&quot;: {&quot;System.Reflection.Metadata.MetadataUpdater.IsSupported&quot;: false }}}" Overwrite="true" Encoding="UTF-8" />
    </Target>

</Project>